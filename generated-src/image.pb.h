/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_IMAGE_PB_H_INCLUDED
#define PB_IMAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Image {
    pb_callback_t data;
    char format[5];
    int32_t width;
    int32_t height;
} Image;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Image_init_default                       {{{NULL}, NULL}, "", 0, 0}
#define Image_init_zero                          {{{NULL}, NULL}, "", 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Image_data_tag                           1
#define Image_format_tag                         2
#define Image_width_tag                          3
#define Image_height_tag                         4

/* Struct field encoding specification for nanopb */
#define Image_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    data,              1) \
X(a, STATIC,   SINGULAR, STRING,   format,            2) \
X(a, STATIC,   SINGULAR, INT32,    width,             3) \
X(a, STATIC,   SINGULAR, INT32,    height,            4)
#define Image_CALLBACK pb_default_field_callback
#define Image_DEFAULT NULL

extern const pb_msgdesc_t Image_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Image_fields &Image_msg

/* Maximum encoded size of messages (where known) */
/* Image_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
